name: Django CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  test:
    runs-on: ubuntu-22.04

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create environments
        run: |
          echo "ENVIRONMENT_NAME=Vachaar" >> .env
          echo "DEBUG=False" >> .env
          echo "SHOW_SWAGGER=True" >> .env
          echo "DJANGO_SETTINGS_MODULE=VachaarBack.settings" >> .env
          echo "POSTGRES_DB=test_db" >> .env
          echo "POSTGRES_USER=postgres" >> .env
          echo "POSTGRES_PASSWORD=postgres" >> .env
          echo "DB_HOST=localhost" >> .env
          echo "DB_PORT=5432" >> .env
          echo "DB_NAME=test_db" >> .env
          echo "DB_USER=postgres" >> .env
          echo "DB_PASS=postgres" >> .env
          echo "EMAIL_HOST=smtp.gmail.com" >> .env
          echo "EMAIL_PORT=587" >> .env
          echo "EMAIL_USE_TLS=True" >> .env
          echo "DEFAULT_FROM_EMAIL=${{ secrets.DEFAULT_FROM_EMAIL }}" >> .env
          echo "ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}" >> .env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "CREDENTIALS_SECRET_KEY=${{ secrets.CREDENTIALS_SECRET_KEY }}" >> .env
          echo "EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }}" >> .env
          echo "EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }}" >> .env
          echo "PUBLIC_KEY=${{ secrets.PUBLIC_KEY }}" >> .env
          echo "PRIVATE_KEY=${{ secrets.PRIVATE_KEY }}" >> .env

      - name: Run migrations
        run: |
          python manage.py migrate

      - name: Run tests
        run: |
          python manage.py test

  system-test:
    runs-on: ubuntu-22.04

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create environments
        run: |
          echo "ENVIRONMENT_NAME=Vachaar" >> .env
          echo "DEBUG=False" >> .env
          echo "SHOW_SWAGGER=True" >> .env
          echo "DJANGO_SETTINGS_MODULE=VachaarBack.settings" >> .env
          echo "POSTGRES_DB=test_db" >> .env
          echo "POSTGRES_USER=postgres" >> .env
          echo "POSTGRES_PASSWORD=postgres" >> .env
          echo "DB_HOST=localhost" >> .env
          echo "DB_PORT=5432" >> .env
          echo "DB_NAME=test_db" >> .env
          echo "DB_USER=postgres" >> .env
          echo "DB_PASS=postgres" >> .env
          echo "EMAIL_HOST=smtp.gmail.com" >> .env
          echo "EMAIL_PORT=587" >> .env
          echo "EMAIL_USE_TLS=True" >> .env
          echo "DEFAULT_FROM_EMAIL=${{ secrets.DEFAULT_FROM_EMAIL }}" >> .env
          echo "ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}" >> .env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "CREDENTIALS_SECRET_KEY=${{ secrets.CREDENTIALS_SECRET_KEY }}" >> .env
          echo "EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }}" >> .env
          echo "EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }}" >> .env
          echo "PUBLIC_KEY=${{ secrets.PUBLIC_KEY }}" >> .env
          echo "PRIVATE_KEY=${{ secrets.PRIVATE_KEY }}" >> .env

      - name: Run migrations
        run: |
          python manage.py migrate

      - name: Run server
        run: |
          python manage.py runserver 0:8080 &

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Run Go script
        run: go run SystemTest/main.go